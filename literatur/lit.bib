
@inproceedings{castro_requirements-driven_2001,
	address = {Berlin, Heidelberg},
	title = {A {Requirements}-{Driven} {Development} {Methodology}},
	isbn = {978-3-540-45341-3},
	abstract = {Information systems of the future will have to better match their operational organizational environment. Unfortunately, development methodologies have traditionally been inspired by programming concepts, not organizational ones, leading to a semantic gap between the system and its environment. To reduce as much as possible this gap, this paper proposes a development methodology named Tropos which is founded on concepts used to model early requirements. Our proposal adopts the i* organizational modeling framework [18], which offers the notions of actor, goal and (actor) dependency, and uses these as a foundation to model early and late requirements, architectural and detailed design. The paper outlines Tropos phases through an e-business example. The methodology seems to complement well proposals for agent-oriented programming platforms.},
	booktitle = {Advanced {Information} {Systems} {Engineering}},
	publisher = {Springer Berlin Heidelberg},
	author = {Castro, Jaelson and Kolp, Manuel and Mylopoulos, John},
	editor = {Dittrich, Klaus R. and Geppert, Andreas and Norrie, Moira C.},
	year = {2001},
	pages = {108--123}
}

@article{atkinson_model-driven_2003,
	title = {Model-driven development: a metamodeling foundation},
	volume = {20},
	issn = {1937-4194},
	shorttitle = {Model-driven development},
	doi = {10.1109/MS.2003.1231149},
	abstract = {Metamodeling is an essential foundation for MDD, but there's little consensus on the precise form it should take and role it should play. The authors analyze the underlying motivation for MDD and then derive a concrete set of requirements that a supporting infrastructure should satisfy. They discuss why the traditional "language definition" interpretation of metamodeling isn't a sufficient foundation and explain how it can be extended to unlock MDD's full potential.},
	number = {5},
	journal = {IEEE Software},
	author = {Atkinson, C. and Kuhne, T.},
	month = sep,
	year = {2003},
	note = {Conference Name: IEEE Software},
	keywords = {Computer science, Humans, Investments, language definition, metamodeling, Metamodeling, model-driven development, modelling, Object oriented modeling, object-oriented programming, Personnel, Production, Productivity, Program processors, Programming profession, specification languages, supporting infrastructure},
	pages = {36--41},
	file = {IEEE Xplore Abstract Record:/Users/d060462/Zotero/storage/6RL6CCMC/1231149.html:text/html;Submitted Version:/Users/d060462/Zotero/storage/SW52L5YP/Atkinson and Kuhne - 2003 - Model-driven development a metamodeling foundatio.pdf:application/pdf}
}

@inproceedings{pandey_effective_2010,
	title = {An {Effective} {Requirement} {Engineering} {Process} {Model} for {Software} {Development} and {Requirements} {Management}},
	doi = {10.1109/ARTCom.2010.24},
	abstract = {Requirement engineering is the most effective phase of software development process. It aims to collect good requirements from stakeholders in the right way. It is important for every organization to develop quality software products that can satisfy user's needs. Requirements engineering for software development process is a complex exercise that considers product demands from a vast number of viewpoints, roles, responsibilities, and objectives. Therefore, it becomes necessary to apply requirement engineering practices in every phase of software development process. In this paper, we propose an effective requirements engineering process model to produce quality requirements for software development. Requirement management and planning phase is executed independently for an effective management of requirements. It is iterative in nature for better requirement engineering and later maintenance. The successful implementation of proposed requirement engineering process can have a good impact on the production of quality software product.},
	booktitle = {2010 {International} {Conference} on {Advances} in {Recent} {Technologies} in {Communication} and {Computing}},
	author = {Pandey, Dhirendra and Suman, U. and Ramani, A.K.},
	month = oct,
	year = {2010},
	keywords = {Documentation, Planning, Presses, Programming, quality software products, requirement analysis, requirement development, requirement elicitation, Requirement engineering, requirement engineering process model, requirement management, requirements management, Resource management, Software, software development, software engineering, Software engineering, software quality, systems analysis},
	pages = {287--291},
	file = {IEEE Xplore Abstract Record:/Users/d060462/Zotero/storage/LMJ79A99/5656776.html:text/html}
}

@article{chakraborty_role_2012,
	title = {The {Role} of {Requirement} {Engineering} in {Software} {Development} {Life} {Cycle}},
	volume = {3},
	abstract = {The Requirement Engineering (RE) is the most important phase of the software development life cycle (SDLC). This phase is used to translate the imprecise, incomplete needs and wishes of the potential users of software into complete, precise and formal specifications. The specifications act as the contract between the software users and the developers. Therefore the importance of Requirement Engineering is enormous to develop effective software and in reducing software errors at the early stage of the development of software. Since Requirement Engineering (RE) has great role in different stages of the SDLC, its consideration in software development is crucial. There exist a number of approaches for requirement engineering. Among the approaches, object-based and problem domain-based approaches are widely used. An effective analysis of methods is essential for the appropriate capturing of requirements. Taking the above viewpoint into account, this paper demonstrates an effective method of requirement engineering, which plays an important role in different phases of the SDLC. Hospital can be seen as an example of a complex system. Therefore, the paper considers Hospital as a case study for which a software system has been developed taking the mentioned approach into account.},
	language = {en},
	number = {5},
	author = {Chakraborty, Abhijit and Baowaly, Mrinal Kanti and Arefin, Ashraful and Bahar, Ali Newaz},
	year = {2012},
	pages = {7},
	file = {Chakraborty et al. - 2012 - The Role of Requirement Engineering in Software De.pdf:/Users/d060462/Zotero/storage/6Y57HD8X/Chakraborty et al. - 2012 - The Role of Requirement Engineering in Software De.pdf:application/pdf}
}

@article{beaulieu_road_2012,
	title = {Road to {Success} {A} {Guide} for {Doctoral} {Students} and {Junior} {Faculty} {Members} in the {Behavioral} and {Social} {Sciences}},
	volume = {14},
	issn = {1522-8053},
	url = {https://doi.org/10.1080/15228053.2012.10845697},
	doi = {10.1080/15228053.2012.10845697},
	number = {1},
	urldate = {2020-08-07},
	journal = {Journal of Information Technology Case and Application Research},
	author = {Beaulieu, Tanya},
	month = jan,
	year = {2012},
	note = {Publisher: Routledge
\_eprint: https://doi.org/10.1080/15228053.2012.10845697},
	pages = {84--88},
	file = {Snapshot:/Users/d060462/Zotero/storage/JHFKICTM/15228053.2012.html:text/html}
}

@article{beaulieu_road_2014,
	title = {Road to {Success} {A} {Guide} for {Doctoral} {Students} and {Junior} {Faculty} {Members} in the {Behavioral} and {Social} {Sciences}},
	copyright = {Copyright Taylor \& Francis},
	issn = {1522-8053},
	url = {https://www.tandfonline.com/doi/pdf/10.1080/15228053.2012.10845697?needAccess=true},
	language = {en},
	urldate = {2020-08-07},
	journal = {Journal of Information Technology Case and Application Research},
	author = {Beaulieu, Tanya},
	month = jul,
	year = {2014},
	note = {Publisher: Taylor \& Francis},
	file = {Snapshot:/Users/d060462/Zotero/storage/SMVUV8G9/15228053.2012.html:text/html}
}
